import pandas as pd
import re

def parse_phonetic_transcription(input_df):
    DISC_vowels = ["i","!","a","u","y","(",")","*","<","e","|","o","K","L","M","I","E","{","A","O","}","@"]
    pattern = re.compile(f"({'|'.join(re.escape(v) for v in DISC_vowels)})")
    output_dict_transcription = {}
    for description in input_df["DISC"]:
        description = str(description)
        output_dict_transcription[description] = []
        syllables = description.split("-")
        for syllable in syllables:
            parts = pattern.split(syllable)
            parts = [p for p in parts if p]
            if parts[0] in DISC_vowels:
                parts.insert(0, "=")
            if parts[-1] in DISC_vowels:
                parts.append("=")
            output_dict_transcription[description] += parts
    return output_dict_transcription

def padding (output_dict_transcription):
    max_len_trans = max(len(v) for v in output_dict_transcription.values())
    for description in output_dict_transcription:
        pad_trans = ["="] * (max_len_trans - len(output_dict_transcription[description]))
        output_dict_transcription[description] = pad_trans + output_dict_transcription[description]
    return output_dict_transcription

def merge_output(output_dict_transcription, input_df):
    df_transcription = pd.DataFrame.from_dict(output_dict_transcription, orient="index").reset_index().rename(columns={"index":"DISC"})
    input_df = pd.merge(input_df, df_transcription, on="DISC", how="right")
    return input_df

CELEX_input = pd.read_csv("/Users/xandervantilburg/Library/CloudStorage/OneDrive-Personal/PhD/CELEX/plurals_filtered.csv")
output_dict_transcription = parse_phonetic_transcription(CELEX_input)
output_dict_transcription = padding(output_dict_transcription)
output = merge_output(output_dict_transcription, CELEX_input)

output.to_csv(path_or_buf="/Users/xandervantilburg/Library/CloudStorage/OneDrive-Personal/PhD/CELEX/plurals_DISC_split.csv", index=False)